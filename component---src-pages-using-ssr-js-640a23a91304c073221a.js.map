{"version":3,"file":"component---src-pages-using-ssr-js-640a23a91304c073221a.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/footer.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/using-ssr.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { useLocation } from \"@reach/router\"\r\n\r\nconst Header = (children) => {\r\n  const location = useLocation()\r\n  const isRoot = location.pathname === \"/\" // トップページ判定\r\n  if (isRoot) {\r\nreturn (\r\n  <header className=\"fixed w-full bg-white/70 dark:bg-gray-800/60 backdrop-blur-md border-b border-gray-200/30 dark:border-gray-700/40 shadow-sm z-50\">\r\n    <nav className=\"flex justify-center space-x-8 py-4 text-sm font-semibold\">\r\n      <a href=\"#kindles\" className=\"hover:text-blue-500 transition\">\r\n        Kindles\r\n      </a>\r\n      <a href=\"#projects\" className=\"hover:text-blue-500 transition\">\r\n        Projects\r\n      </a>\r\n      <a href=\"#contact\" className=\"hover:text-blue-500 transition\">\r\n        Contact\r\n      </a>\r\n      <Link to=\"/distribution\" className=\"hover:text-blue-500 transition\">配布物</Link>\r\n    </nav>\r\n  </header>\r\n)}\r\nelse{\r\nreturn (\r\n  <header className=\"fixed w-full bg-white/70 dark:bg-gray-800/60 backdrop-blur-md border-b border-gray-200/30 dark:border-gray-700/40 shadow-sm z-50\">\r\n    <nav className=\"flex justify-center space-x-8 py-4 text-sm font-semibold\">\r\n      <Link to=\"/\" className=\"hover:text-blue-500 transition\">トップページへ</Link>\r\n      <Link to=\"/distribution\" className=\"hover:text-blue-500 transition\">配布物</Link>\r\n    </nav>\r\n  </header>\r\n)}}\r\n\r\nexport default Header\r\n","import * as React from \"react\"\r\n\r\nconst Footer = () => (\r\n  <footer className=\"py-6 text-center text-sm text-gray-500 dark:text-gray-400\">\r\n    © {new Date().getFullYear()} Kyukyunyorituryo\r\n  </footer>\r\n)\r\n\r\nexport default Footer\r\n","import * as React from \"react\"\r\nimport Header from \"./header\"\r\nimport Footer from \"./footer\"\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div className=\"font-sans text-gray-800 dark:bg-gray-900 dark:text-gray-100\">\r\n      <Header />\r\n      <main>{children}</main>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, image, pathname, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n            siteUrl\r\n            image\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n  const metaImage = image ? `${site.siteMetadata.siteUrl}${image}` : `${site.siteMetadata.siteUrl}${site.siteMetadata.image}`\r\n  const url = pathname ? `${site.siteMetadata.siteUrl}${pathname}` : site.siteMetadata.siteUrl\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta property=\"og:url\" content={url} />\r\n      <meta property=\"og:image\" content={metaImage} />\r\n      <meta property=\"og:site_name\" content={defaultTitle} />\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      <meta name=\"twitter:image\" content={metaImage} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst UsingSSR = ({ serverData }) => {\r\n  return (\r\n    <Layout>\r\n      <h1>\r\n        This page is <b>rendered server-side</b>\r\n      </h1>\r\n      <p>\r\n        This page is rendered server side every time the page is requested.\r\n        Reload it to see a(nother) random photo from{\" \"}\r\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\r\n      </p>\r\n      <img\r\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\r\n        alt=\"A random dog\"\r\n        src={serverData.message}\r\n      />\r\n      <p>\r\n        To learn more, head over to our{\" \"}\r\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\r\n          documentation about Server Side Rendering\r\n        </a>\r\n        .\r\n      </p>\r\n      <Link to=\"/\">Go back to the homepage</Link>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"Using SSR\" />\r\n\r\nexport default UsingSSR\r\n\r\nexport async function getServerData() {\r\n  try {\r\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\r\n    if (!res.ok) {\r\n      throw new Error(`Response failed`)\r\n    }\r\n    return {\r\n      props: await res.json(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      status: 500,\r\n      headers: {},\r\n      props: {},\r\n    }\r\n  }\r\n}\r\n"],"names":["children","useLocation","pathname","React","className","href","Link","to","Footer","Date","getFullYear","_ref","Header","_site$siteMetadata","_site$siteMetadata2","description","title","image","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","metaImage","siteUrl","url","name","content","property","author","Head","Seo","serverData","Layout","style","width","borderRadius","alt","src","message"],"sourceRoot":""}